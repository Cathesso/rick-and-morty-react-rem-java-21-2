{"version":3,"sources":["components/CharacterName.js","components/PictureCard.js","App.js","service/api-service.js","reportWebVitals.js","index.js"],"names":["CharacterName","character","className","name","PictureCard","src","image","alt","class","species","origin","App","useState","searchString","setSearchString","characters","setCharacters","error","setError","isLoading","setIsLoading","actualPage","setActualPage","useEffect","page","pageNumber","axios","get","then","response","data","results","catch","finally","loadData","onClick","value","onChange","event","target","filter","toLowerCase","includes","map","id","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAQeA,MARf,SAAuBC,GACrB,OACE,oBAAGC,UAAU,OAAb,UACE,2CADF,IAC0BD,EAAUE,SCgBzBC,MAjBf,YAAqC,IAAdH,EAAa,EAAbA,UACrB,OACE,gCACE,qBAAKI,IAAKJ,EAAUK,MAAOC,IAAI,6BAC/B,cAAC,EAAD,CAAeJ,KAAMF,EAAUE,OAC/B,oBAAGK,MAAM,cAAT,UACG,IACD,kDAFF,IAEiCP,EAAUQ,QAAS,OAEpD,8BACE,8CACCR,EAAUS,OAAOP,Y,iBCuDXQ,MA9Df,WAAgB,IAAD,EAE2BC,mBAAS,IAFpC,mBAENC,EAFM,KAEQC,EAFR,OAGuBF,mBAAS,IAHhC,mBAGNG,EAHM,KAGMC,EAHN,OAIYJ,qBAJZ,mBAIPK,EAJO,KAIAC,EAJA,OAKqBN,oBAAS,GAL9B,mBAKNO,EALM,KAKKC,EALL,OAMuBR,mBAAS,GANhC,mBAMNS,EANM,KAMMC,EANN,KA8Bb,OAtBAC,qBAAU,YAIV,SAAkBC,GAChBJ,GAAa,ICXcK,EDYZD,ECVRE,IAAMC,IAAI,mDAAqDF,GACjEG,MAAK,SAAAC,GAEF,OAAOA,EAASC,SDOHF,MAAK,SAACE,GAAD,OAAUd,EAAcc,EAAKC,YAAUC,OAAM,SAACf,GAAD,OAAWC,EAASD,MAAQgB,SAAQ,kBAAIb,GAAa,MCZzH,IAAwBK,EDO3BS,CAASb,KACR,CAACA,IAqBF,sBAAKnB,UAAU,MAAf,UACE,0DAA6BmB,KAC3B,sBAAKnB,UAAU,UAAf,UAEE,wBAAQiC,QAAS,kBAAKb,EAAcD,EAAa,IAAjD,kBAEA,uBACEe,MAAOvB,EACPwB,SAAU,SAACC,GACTxB,EAAgBwB,EAAMC,OAAOH,UAIjC,wBAAQD,QAAS,kBAAKb,EAAcD,EAAa,IAAjD,qBAGHN,EACEyB,QAAO,SAACvC,GACP,OAAOA,EAAUE,KACdsC,cACAC,SAAS7B,EAAa4B,kBAE1BE,KAAI,SAAC1C,GAAD,OACH,cAAC,EAAD,CAAgCA,UAAWA,GAAzBA,EAAU2C,OAE/BzB,GAAa,2CACbF,GAAS,kEAAkCA,EAAM4B,eEnDzCC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c90dd8a6.chunk.js","sourcesContent":["function CharacterName(character) {\n  return (\n    <p className=\"name\">\n      <strong>Name:</strong> {character.name}\n    </p>\n  );\n}\n\nexport default CharacterName;\n","import CharacterName from \"./CharacterName\";\n\nfunction PictureCard({ character }) {\n  return (\n    <div>\n      <img src={character.image} alt=\"Much majestic, very wow!\" />\n      <CharacterName name={character.name} />\n      <p class=\"description\">\n        {\" \"}\n        <strong>Description:</strong> {character.species}{\" \"}\n      </p>\n      <p>\n        <strong>Origin: </strong>\n        {character.origin.name}\n      </p>\n    </div>\n  );\n}\n\nexport default PictureCard;\n","import \"./App.css\";\nimport PictureCard from \"./components/PictureCard\";\n//import characters from \"../src/response.json\";\nimport { loadCharacters } from \"./service/api-service\";\nimport {useEffect, useState} from \"react\";\n\nfunction App() {\n\n  const [searchString, setSearchString] = useState(\"\");\n  const [characters, setCharacters] = useState([]);\n  const[error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  const [actualPage, setActualPage] = useState(1);\n\n  useEffect(() =>{\n    loadData(actualPage);\n  }, [actualPage]);\n\n  function loadData(page){\n    setIsLoading(true);\n    loadCharacters(page).then((data) => setCharacters(data.results)).catch((error) => setError(error)).finally(()=>setIsLoading(false));\n  }\n\n  /*function loadPage(change){\n    if(change === -1 && actualPage ===0){\n      loadData(actualPage);\n    }\n    if(change === 1 && actualPage === 34){\n      loadData(actualPage);\n    }\n    else{\n      setActualPage((actualPage + change));\n      loadData(actualPage);\n    }\n  };*/\n\n  return (\n    <div className=\"App\">\n      <h1>Rick & Morty Characters {actualPage}</h1>\n        <div className=\"control\">\n\n          <button onClick={()=> setActualPage(actualPage - 1)}>Prev</button>\n\n          <input\n            value={searchString}\n            onChange={(event) => {\n              setSearchString(event.target.value);\n            }}\n          />\n\n          <button onClick={()=> setActualPage(actualPage + 1)}>Next</button>\n\n        </div>\n      {characters\n        .filter((character) => {\n          return character.name\n            .toLowerCase()\n            .includes(searchString.toLowerCase());\n        })\n        .map((character) => (\n          <PictureCard key={character.id} character={character} />\n        ))}\n      {isLoading && <div>Lädt!</div>}\n      {error && <div>Ja weeß ick jetz ooch nich: {error.message}</div>}\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\n/*export function loadCharacters() {\n    return fetch(\"https://rickandmortyapi.com/api/character/?page=13\").then((response) =>\n        response.json()\n    );\n}*/\n\nexport function loadCharacters(pageNumber){\n    // Make a request for a user with a given ID\n    return axios.get('https://rickandmortyapi.com/api/character/?page=' + pageNumber)\n        .then(response => {\n            // handle success\n            return response.data;\n        })\n\n        /*.catch(function (error) {\n            // handle error\n            console.log(error);\n        });*/\n}","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}